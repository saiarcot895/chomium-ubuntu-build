Index: dev/build/toolchain/gcc_toolchain.gni
===================================================================
--- dev.orig/build/toolchain/gcc_toolchain.gni
+++ dev/build/toolchain/gcc_toolchain.gni
@@ -32,6 +32,10 @@ declare_args() {
   # Use -MD instead of -MMD for compiler commands. This is useful for tracking
   # the comprehensive set of dependencies.
   system_headers_in_deps = false
+  
+  clang_use_compiler_version_suffix = false
+
+  clang_compiler_version_suffix = ""
 }
 
 # When the arg is set via args.gn, it applies to all toolchains. In order to not
@@ -799,22 +803,20 @@ template("gcc_toolchain") {
 # use_gold too.
 template("clang_toolchain") {
   gcc_toolchain(target_name) {
-    _path = "$clang_base_path/bin"
-    _is_path_absolute = get_path_info(_path, "abspath") == _path
-
-    # Preserve absolute paths for tools like distcc.
-    if (_is_path_absolute && filter_include([ _path ], [ "//*" ]) == []) {
-      prefix = _path
-    } else {
-      prefix = rebase_path(_path, root_build_dir)
+    if (clang_use_compiler_version_suffix) {
+      cc = "clang-${clang_compiler_version_suffix}"
+      cxx = "clang++-${clang_compiler_version_suffix}"
+      ar = "llvm-ar-${clang_compiler_version_suffix}"
+      nm = "llvm-nm-${clang_compiler_version_suffix}"
+      readelf = "llvm-readelf-${clang_compiler_version_suffix}"
+    } else {
+      cc = "clang"
+      cxx = "clang++"
+      ar = "llvm-ar"
+      nm = "llvm-nm"
+      readelf = "llvm-readelf"
     }
-
-    cc = "${prefix}/clang"
-    cxx = "${prefix}/clang++"
     ld = cxx
-    readelf = "${prefix}/llvm-readelf"
-    ar = "${prefix}/llvm-ar"
-    nm = "${prefix}/llvm-nm"
 
     forward_variables_from(invoker,
                            [
